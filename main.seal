include './raylib.seal'
include './button.seal'
include './config.seal'
include './slider.seal'

set_config_flags(flags.FLAG_MSAA_4X_HINT)
init_window(WIDTH, HEIGHT, TITLE)
set_fps(FPS)

const
  font = load_font('joystix.otf', 256)
  pi = '3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196442881097566593344612847564823378678316527120190914564856692346034861045432664821339360726024914127372458700660631558817488152092096282925409171536436789259036001133053054882046'

var
  font_size = 64
  start = 0
  timer = 0
  time  = 0.03

const
  spacing = 16
  play_btn = Button(
    (WIDTH - 64 * 4) / 2,
    (HEIGHT - 36 * 4) / 2,
    [
      load_texture('assets/play_btn_still.png'),
      load_texture('assets/play_btn_hold.png')
    ],
    4
  )
  slider = Slider(2.2)

while not window_should_close()
  const dt = delta_time()

  if is_button_pressed(play_btn) then slider.is_moving = true

  if slider.is_moving
    move_slider(slider, WIDTH, dt)

  begin_drawing()
  clear_background(colors.LILAC)
  var pos = vec2(font_size / 4, font_size / 4)
  for i in start to len(pi)
    draw_text_ex(font, pi[i], pos, font_size, 0, color(0, 0, 0, 200))
    if (pos.x = pos.x + font_size / 2 + spacing) + font_size / 2 > WIDTH
      pos.x = font_size / 4
      if (pos.y = pos.y + font_size) + font_size > HEIGHT
        if i + 1 < len(pi)
          if timer >= time
            start = start + 1
            timer = 0
          else timer = timer + dt
          stop
        else
          if timer >= time
            start = 0
            timer = 0
          else timer = timer + dt
  
  draw_button(play_btn)
  if slider.is_moving then draw_slider(slider)

  end_drawing()

close_window()
